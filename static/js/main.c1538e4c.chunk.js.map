{"version":3,"sources":["components/Notes.js","components/AddNote.js","components/Lists.js","components/Search.js","components/Header.js","App.js","index.js"],"names":["Notes","id","text","date","handleDeleteNote","className","onClick","size","AddNote","handleAddNote","useState","noteText","setNoteText","rows","cols","placeholder","value","onChange","event","target","length","class","trim","List","note","map","notes","Search","handleSearchNote","type","Header","handleToggleDarkMode","previousDarkMode","App","nanoid","setNote","searchText","setSearchText","darkMode","setDarkMode","useEffect","savedNotes","JSON","parse","localStorage","getItem","setItem","stringify","Lists","filter","toLowerCase","includes","Date","newNote","toLocaleDateString","newNotes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1538e4c.chunk.js","sourcesContent":["import {MdDeleteForever} from 'react-icons/md';\r\n\r\nconst Notes = ({id, text, date, handleDeleteNote}) => {\r\n    return(\r\n        <div className=\"note\">\r\n            <span>{text}</span>\r\n            <div className=\"note-footer\">\r\n                <small>{date}</small>\r\n                <MdDeleteForever onClick={()=> handleDeleteNote(id)} className=\"note-delete\" size=\"1.3em\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notes;","import { useState } from \"react\";\r\n\r\nconst AddNote = ({handleAddNote}) => {\r\n    const [noteText, setNoteText] = useState('');\r\n    const characterLimit = 200;\r\n\r\n    const handleChange = (event) => {\r\n        if(characterLimit - event.target.value.length>=0)\r\n            setNoteText(event.target.value);\r\n    };\r\n\r\n    const handleSaveClick = () => {\r\n        if(noteText.trim().length>0){\r\n            handleAddNote(noteText);\r\n            setNoteText('');\r\n        }\r\n    };\r\n\r\n    return(\r\n        <div className=\"note new\">\r\n            <textarea \r\n                rows='8' \r\n                cols='10' \r\n                placeholder=\"Type to add new note...\"\r\n                value={noteText}\r\n                onChange={handleChange}>\r\n            </textarea>\r\n            <div className=\"note-footer\">\r\n                <small>{characterLimit - noteText.length} remaining</small>\r\n                <button class=\"save\" onClick={handleSaveClick}>Save</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNote;","import Notes from './Notes'\r\nimport AddNote from './AddNote';\r\n\r\nconst List = ({note, handleAddNote, handleDeleteNote}) => {\r\n    return (\r\n        <div className=\"list\">\r\n            {note.map((notes)=>(\r\n                <Notes id={notes.id} text={notes.text} date={notes.date} handleDeleteNote={handleDeleteNote}/>\r\n            ))}\r\n            <AddNote handleAddNote={handleAddNote}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default List;","import React from \"react\";\r\nimport { MdSearch } from \"react-icons/md\";\r\n\r\nconst Search = ({handleSearchNote}) => {\r\n    return(\r\n        <div className=\"search\">\r\n            <MdSearch className='search-name' size='1.3em' />\r\n            <input \r\n                onChange={(event)=>\r\n                    handleSearchNote(event.target.value)\r\n                } \r\n                type=\"text\" placeholder=\"Type to search something...\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search;","const Header = ({handleToggleDarkMode}) => {\r\n    return(\r\n        <div className=\"header\">\r\n            <h1>Notes</h1>\r\n            <button \r\n                onClick={()=>\r\n                    handleToggleDarkMode(\r\n                        (previousDarkMode)=> !previousDarkMode\r\n                )} \r\n                className=\"save\">Toggle Mode</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import { useEffect, useState } from 'react';\nimport Lists from './components/Lists';\nimport {nanoid} from 'nanoid';\nimport Search from './components/Search'\nimport Header from './components/Header';\n\nconst App = () => {\n  const [note,setNote] = useState([\n    {\n      id: nanoid(),\n      text: \"Welcome to the notes app! Start typing in the text area to write a new note. You can save once you finish. Click on the delete icon to delete notes. Search and Toggle mode features are available too.\",\n      date: \"01/01/2001\",\n    },\n]);\n\nconst [searchText, setSearchText] = useState('');\nconst [darkMode, setDarkMode] = useState(false);\n\nuseEffect(() => {\n  const savedNotes = JSON.parse(localStorage.getItem('audacity21-notes-app-data'));\n  if(savedNotes){\n    setNote(savedNotes);\n  }\n},[])\n\nuseEffect (() => {\n  localStorage.setItem(\n    'audacity21-notes-app-data',\n     JSON.stringify(note));\n}, [note]);\n\nconst addNote = (text) => {\n  const date = new Date();\n  const newNote = {\n    id: nanoid(),\n    text: text, \n    date: date.toLocaleDateString()\n  }\n  const newNotes = [...note, newNote];\n  setNote(newNotes);\n}\nconst deleteNote = (id) => {\n  const newNotes = note.filter((notes)=>notes.id !== id);\n  setNote(newNotes);\n}\n  return(\n    <div className={`${darkMode && 'dark-mode'}`}>\n      <div className=\"container\">\n        <Header handleToggleDarkMode={setDarkMode}/>\n        <Search handleSearchNote={setSearchText}/>\n        <Lists \n          note={note.filter((notes)=>\n          notes.text.toLowerCase().includes(searchText.toLowerCase())\n        )} \n        handleAddNote={addNote}\n        handleDeleteNote={deleteNote}/>\n      </div>\n    </div> \n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}